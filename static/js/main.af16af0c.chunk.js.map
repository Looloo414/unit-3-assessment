{"version":3,"sources":["components/Circles/Circles.jsx","components/CircleSelector/CircleSelector.jsx","App.js","reportWebVitals.js","index.js"],"names":["Circles","props","className","circleNo","map","circle","idx","selectedCircleIdx","onClick","handleCircleSelection","CircleSelector","App","state","newIdx","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAmBeA,G,YAhBC,SAACC,GACb,OACI,qBAAKC,UAAU,UAAf,SACKD,EAAME,SAASC,KAAI,SAACC,EAAQC,GAAT,OACpB,qBACAJ,UAAWD,EAAMM,oBAAsBD,EAAM,WAAa,UAC1DE,QAAU,kBAAMP,EAAMQ,sBAAsBH,IAF5C,UAKKL,EAAMM,kBAAN,UAAqCD,EAAI,KAFzCD,UCYFK,G,MAnBQ,SAACT,GACpB,OACI,qBAAKC,UAAU,iBAAf,SACKD,EAAME,SAASC,KAAI,SAACC,EAAQC,GAAT,OAChB,wBAEAJ,UAAWD,EAAMM,oBAAsBD,EAAM,WAAa,QAC1DE,QAAU,kBAAMP,EAAMQ,sBAAsBH,IAH5C,SAKKL,EAAMM,oBAAsBD,EAA5B,iBAA4CA,EAAI,EAAhD,mCAA8EA,EAAI,IAJlFD,UCFfF,EAAW,CAAC,IAAK,IAAK,IAAK,KAgClBQ,E,4MA7BbC,MAAQ,CACNL,kBAAmB,G,EAGvBE,sBAAwB,SAACI,GACvB,EAAKC,SAAS,CAACP,kBAAmBM,K,uDAIhC,OACE,sBAAKX,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,4BACA,iCACE,cAAC,EAAD,CACAO,sBAAuBM,KAAKN,sBAC5BN,SAAUA,EACVI,kBAAmBQ,KAAKH,MAAML,oBAE9B,cAAC,EAAD,CACAE,sBAAuBM,KAAKN,sBAC5BN,SAAUA,EACVI,kBAAmBQ,KAAKH,MAAML,8B,GAtBtBS,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.af16af0c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Circles.css';\n\nconst Circles = (props) => {\n    return (\n        <div className=\"Circles\">\n            {props.circleNo.map((circle, idx) =>\n            <div\n            className={props.selectedCircleIdx === idx ? 'selected' : 'Circles'}\n            onClick={ () => props.handleCircleSelection(idx)}\n            key={circle}\n            >\n                {props.selectedCircleIdx === idx ? `${idx+1}` : `${idx+1}`}\n            </div>\n            )}\n        </div>\n    )\n}\n\nexport default Circles;","import React from 'react';\nimport \"./CircleSelector.css\"\n\nconst CircleSelector = (props) => {\n    return (\n        <div className=\"CircleSelector\">\n            {props.circleNo.map((circle, idx) => \n                <button \n                key={circle}\n                className={props.selectedCircleIdx === idx ? 'Selected' : 'Color'}\n                onClick={ () => props.handleCircleSelection(idx)}\n                >\n                    {props.selectedCircleIdx === idx ? `Circle ${idx+1} Selected` : `Select Taco ${idx+1}`}\n\n                </button>\n            )}\n        </div>\n    )\n\n}\n\n\nexport default CircleSelector;","import React, { Component } from 'react';\nimport './App.css';\nimport Circles from './components/Circles/Circles';\nimport CircleSelector from \"./components/CircleSelector/CircleSelector\"\n\n\nconst circleNo = ['0', '1', '2', '3']\n\nclass App extends Component {\n  state = {\n    selectedCircleIdx: 0\n  }\n\nhandleCircleSelection = (newIdx) => {\n  this.setState({selectedCircleIdx: newIdx})\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">Pick a Circle!</header>\n        <main>\n          <CircleSelector \n          handleCircleSelection={this.handleCircleSelection}\n          circleNo={circleNo}\n          selectedCircleIdx={this.state.selectedCircleIdx}\n          />\n          <Circles \n          handleCircleSelection={this.handleCircleSelection}\n          circleNo={circleNo}\n          selectedCircleIdx={this.state.selectedCircleIdx}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}